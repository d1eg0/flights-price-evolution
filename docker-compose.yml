version: '3'
services:
  mongo-server:
    image: "bitnami/mongodb:latest"
    ports:
      - "27017:27017"
    volumes:
      - ${PWD}/scripts/flights.js:/docker-entrypoint-initdb.d/flights.js
      - ${PWD}/.db:/bitnami/mongodb

  zookeeper-server:
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    image: "bitnami/zookeeper:latest"

  kafka-server:
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-server:2181
    image: "bitnami/kafka:latest"
    ports: 
      - "8000:8000"
      - "9092:9092"
    depends_on:
      - zookeeper-server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5

  spark-master:
    image: bitnami/spark:2.4.5
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "8080:8080"
    volumes:
      - artifacts-volume:/usr/src/app

  spark-worker-1:
    image: bitnami/spark:2.4.5
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
      - "4041:4040"
    volumes:
      - artifacts-volume:/usr/src/app
  spark-worker-2:
    image: bitnami/spark:2.4.5
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    depends_on:
      - spark-master
    ports:
      - "8082:8081"
      - "4042:4040"
    volumes:
      - artifacts-volume:/usr/src/app

  flights-scraper-app:
    build: flights-scraper
    command: sh -c "/usr/scripts/wait-for-it.sh -s -t 120 kafka-server:9092 -- python -m scraper.run --bootstrap-servers kafka-server:9092 --interval 60 --origins PMI --destinations BCN MAD VLC"
    restart: on-failure
    depends_on:
      - "kafka-server"
      - "zookeeper-server"
    volumes:
      - ${PWD}/scripts/wait-for-it.sh:/usr/scripts/wait-for-it.sh

  flights-streams-app:
    build: flights-streams
    command: sh -c "/usr/scripts/wait-for-it.sh -s -t 120 spark-master:7077 -- /opt/bitnami/spark/bin/spark-submit --class FlightStreamsApp --master spark://spark-master:7077 --deploy-mode cluster --total-executor-cores 1 --driver-memory 512m /usr/src/app/flights-streams.jar --window-duration '60 seconds' --bootstrap-server kafka-server:9092 --mongo-hosts mongo-server:27017"
    depends_on:
      - "spark-master"
      - "mongo-server"
      - "kafka-server"
      - "zookeeper-server"
    volumes:
      - artifacts-volume:/usr/src/app
      - ${PWD}/scripts/wait-for-it.sh:/usr/scripts/wait-for-it.sh

volumes:
  artifacts-volume:
